const newBookBtn = document.querySelector("#newbook");
const shelf = document.querySelector(".shelf");
const bookForm = document.querySelector("#book-form");

function newBookEvent() {
  newBookBtn.addEventListener('click', () => {
    if (bookForm.getAttribute('hidden') === '') {
      showForm();
    } else {
      resetForm();
    }
  });
}

function submitFormEvent() {
  bookForm.addEventListener('submit', (e) => {
    e.preventDefault();
    let title = e.target.book_title.value;
    let author = e.target.book_author.value;
    let pages = e.target.book_pages.value;
    let read = e.target.have_read.value;

    addBookToLibrary(title, author, pages, read);
    addBooksToShelf();

  });
}

function removeBookEvent(btn) {
  btn.addEventListener('click', (e) => {
    let i = e.target.parentElement.dataset.indexNumber;
    let book = e.target.parentElement;
    removeBook(book, i);
  });
}

function readBookEvent(btn) {
  btn.addEventListener('click', (e) => {
    let i = e.target.parentElement.dataset.indexNumber;
    let book = e.target.parentElement;
    books[i].readBook(book, i);
  });
}

let books = [];

function addBooksToShelf() {
  shelf.replaceChildren();
  for (let book of books) {
    let bookDiv = document.createElement("div");
    bookDiv.setAttribute("class", "book");
    bookDiv.setAttribute('data-index-number', books.indexOf(book));

    let title = document.createElement("h3");
    title.setAttribute("class", "title");
    title.textContent = book.title;

    let author = document.createElement("h5");
    author.setAttribute("class", "author");
    author.textContent = book.author;

    let removeBtn = document.createElement('button');
    removeBtn.setAttribute('class', 'remove');
    removeBtn.textContent = "Remove";
    removeBookEvent(removeBtn);

    let readBtn = document.createElement('button');
    readBtn.setAttribute('class', 'read-btn');
    readBtn.textContent = "Read?";
    readBookEvent(readBtn);

    bookDiv.appendChild(title);
    bookDiv.appendChild(author);
    bookDiv.appendChild(removeBtn);
    bookDiv.appendChild(readBtn);
    shelf.appendChild(bookDiv);
  }
}

class Book {

  constructor(title, author, pages, read) {
  this.title = title;
  this.author = author;
  this.pages = pages;
  this.read = read;
  }

  readBook(book, i) {
    let currBook = books[i];
    let btn = book.lastChild;
    if (currBook.read === 'read') {
      currBook.read = 'not_read';
      btn.setAttribute('style', 'background: red; border: none;');
    } else {
      currBook.read = 'read';
      btn.setAttribute('style', 'background: green; border: none;');
    }
  }
}

function addBookToLibrary(title, author, pages, read) {
  let book = new Book(title, author, pages, read);
  books.push(book);
}

function showForm() {
  let bookForm = document.querySelector("#book-form");
  bookForm.removeAttribute("hidden");
}

function resetForm() {
  bookForm.reset();
}

function removeBook(book, i) {
  books.splice(i);
  shelf.removeChild(book);
  
}


addBookToLibrary("Republic", "Plato", "412", "read");
addBookToLibrary("Politics", "Aristotle", "375", "read");
addBookToLibrary("The Prince", "Machiavelli", "150", "read");

addBooksToShelf();
newBookEvent();
submitFormEvent();


